class PlayerMovement{
    field Player player;
    field Array blockArr;
    field int blockHeight;
    field int blockWidth;
    field int playerHeight;
    field int playerWidth;
    field int maxJumpHeight;
    field int curJumpHeight;
    field int jumpSpeed;
    field bool isOnGround;
    field Point playerCoordinates;

    constructor PlayerMovement new(Player plr, Array blocks, int bHeight, int bWidth, int maxJump){
        let player = plr;
        let blockArr = blocks;
        let blockHeight = bHeight;
        let blockWidth = bWidth;
        let playerHeight = plr.getPlayerHeight();
        let playerWidth = plr.getPlayerWidth();
        let jumpSpeed = plr.getJumpSpeed();
        let maxJumpHeight = maxJump;
        let curJumpHeight = 0;
        let isOnGround = false;
        return this;
    }

    method void execute(){
        var char key;
        var bool wasMove;

        let wasMove = false;
        let key = Keyboard.keyPressed();
        
        if (key = 132){
            let playerCoordinates = player.tryRight();
            if (CheckOutOfBound()){
                if (CheckRightMove()){
                    if (~wasMove){
                        do player.erase();
                        let wasMove = true;
                    }
                    do player.moveRight();
                }
            }
        }
        if (key = 130){
            let playerCoordinates = player.tryLeft();
            if (CheckOutOfBound()){
                if (CheckLeftMove()){
                    if (~wasMove){
                        do player.erase();
                        let wasMove = true;
                    }
                    do player.moveLeft();
                }
            }
        }
        if (isOnGround & (key = 32)){
            let playerCoordinates = player.tryUp();
            if (CheckOutOfBound()){
                if (CheckUpMove()){
                    if (~wasMove){
                        do player.erase();
                        let wasMove = true;
                    }
                    do player.moveUp();
                    let curJumpHeight = curJumpHeight + jumpSpeed;
                    let isOnGround = false;
                }
            }
        }
        else{
            if (curJumpHeight > 0){
                let curJumpHeight = curJumpHeight + jumpSpeed;
                if (curJumpHeight > maxJumpHeight){
                    let curJumpHeight = 0;
                }
                else{
                    let playerCoordinates = player.tryUp();
                    if (CheckOutOfBound()){
                        if (CheckUpMove()){
                            if (~wasMove){
                                do player.erase();
                                let wasMove = true;
                            }
                            do player.moveUp();
                        }
                    }
                    else{
                        let curJumpHeight = 0;
                    }
                }
            }
        }

        if (curJumpHeight = 0){
            let playerCoordinates = player.tryDown();
            if (CheckOutOfBound()){
                if (CheckDownMove()){
                    if (~wasMove){
                        do player.erase();
                        let wasMove = true;
                    }
                    do player.moveDown();
                }
                else{
                    let isOnGround = true;
                }
            }
            else{
                let isOnGround = true;
            }
        }
        if (wasMove){
            do player.draw();
        }
        return;
    }

    method bool CheckOutOfBound(){
        var int playerX, playerY;
        let playerX = playerCoordinates.getX();
        let playerY = playerCoordinates.getY();
        if ((playerX < 0) | (playerY < 0) | (playerX + playerWidth > 511) | (playerY + playerHeight > 255)){
            return false;
        }
        return true;
    }

    method bool CheckRightMove(){
        var int playerX, playerY, row, col;
        var Array tempArr;
        var Block block;
        let playerX = playerCoordinates.getX();
        let playerY = playerCoordinates.getY();
        let row = playerY + playerHeight / blockHeight;
        let col = playerX + playerWidth / blockWidth;
        let tempArr = blockArr[row];
        if (~(tempArr[col] = 0)){
            let block = tempArr[col];
            if (block.getType() = 0){
                return false;
            }
        }
        let row = playerY / blockHeight;
        let col = playerX + playerWidth / blockWidth;
        let tempArr = blockArr[row];
        if (~(tempArr[col] = 0)){
            let block = tempArr[col];
            if (block.getType() = 0){
                return false;
            }
        }
        return true;
    }

    method bool CheckLeftMove(){
        var int playerX, playerY, row, col;
        var Array tempArr;
        var Block block;
        let playerX = playerCoordinates.getX();
        let playerY = playerCoordinates.getY();
        let row = playerY + playerHeight / blockHeight;
        let col = playerX / blockWidth;
        let tempArr = blockArr[row];
        if (~(tempArr[col] = 0)){
            let block = tempArr[col];
            if (block.getType() = 0){
                return false;
            }
        }
        let row = playerY / blockHeight;
        let col = playerX / blockWidth;
        let tempArr = blockArr[row];
        if (~(tempArr[col] = 0)){
            let block = tempArr[col];
            if (block.getType() = 0){
                return false;
            }
        }
        return true;
    }

    method bool CheckUpMove(){
        var int playerX, playerY, row, col;
        var Array tempArr;
        var Block block;
        let playerX = playerCoordinates.getX();
        let playerY = playerCoordinates.getY();
        let row = playerY / blockHeight;
        let col = playerX / blockWidth;
        let tempArr = blockArr[row];
        if (~(tempArr[col] = 0)){
            let block = tempArr[col];
            if (block.getType() = 0){
                return false;
            }
        }
        let row = playerY / blockHeight;
        let col = playerX + playerWidth / blockWidth;
        let tempArr = blockArr[row];
        if (~(tempArr[col] = 0)){
            let block = tempArr[col];
            if (block.getType() = 0){
                return false;
            }
        }
        return true;
    }

    method bool CheckDownMove(){
        var int playerX, playerY, row, col;
        var Array tempArr;
        var Block block;
        let playerX = playerCoordinates.getX();
        let playerY = playerCoordinates.getY();
        let row = playerY + playerHeight / blockHeight;
        let col = playerX + playerWidth / blockWidth;
        let tempArr = blockArr[row];
        if (~(tempArr[col] = 0)){
            let block = tempArr[col];
            if (block.getType() = 0){
                return false;
            }
        }
        let row = playerY + playerHeight / blockHeight;
        let col = playerX / blockWidth;
        let tempArr = blockArr[row];
        if (~(tempArr[col] = 0)){
            let block = tempArr[col];
            if (block.getType() = 0){
                return false;
            }
        }
        return true;
    }

    method Point getPlayerArrCoordinates(){
        let playerCoordinates = player.getCoordinates();
        do playerCoordinates.setX((playerCoordinates.getX() + (playerWidth / 2)) / blockWidth);
        do playerCoordinates.setY((playerCoordinates.getY() + (playerHeight / 2)) / blockHeight);
        return playerCoordinates;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }
}