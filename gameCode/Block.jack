class Block {
    field int x, y, width, height;
    field int blockType;
    field int styleType;

    constructor Block new(int rx, int ry, int blockHeight, int blockWidth, int bType, int sType) {
        let x = rx;
        let y = ry;
        let width = blockWidth;
        let height = blockHeight;
        let blockType = bType;
        let styleType = sType;
        return this;
    }

    method void draw() {
        if (blockType = 0){
            if (styleType = 0){
                do drawTypeClassic();
                return;
            }
            if (styleType = 1){
                do drawType1();
                return;
            }
            if (styleType = 2){
                do drawType2();
                return;
            }
            if (styleType = 3){
                do drawType3();
                return;
            }
            if (styleType = 4){
                do drawType4();
                return;
            }
            if (styleType = 5){
                do drawType5();
                return;
            }
            if (styleType = 6){
                do drawType6();
                return;
            }
            if (styleType = 7){
                do drawType7();
                return;
            }
        }else{
            if (styleType = 1){
                do drawBonusType1();
            }else{
                do drawBonusType2();
            }
        }
        return;
    }

    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + width-1 , y + height-1);
        return;
    }

    method void moveDown() {
        let y = y + height;
        return;
    }

    method int getType(){
        return blockType;
    }

    //styleType = 0
    method void drawTypeClassic(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width-1, y + height-1);
        return;
    }

    //styleType = 1
    method void drawType1(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width - 1, y + height - 1);
        do Screen.setColor(false);
        do Screen.drawRectangle(x + 4, y + 4, x + width - 5, y + height - 5);
        do Screen.setColor(true);
        do Screen.drawRectangle(x + 8, y + 8, x + width - 9, y + height - 9);
        return;
    }

    //styleType = 2
    method void drawType2(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width - 1, y + height - 1);
        do Screen.setColor(false);
        do Screen.drawCircle(x + 16, y + 16, 8);
        return;
    }

    //styleType = 3
    method void drawType3(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width - 1, y + height - 1);
        do Screen.setColor(false);
        do Screen.drawRectangle(x + 4, y + 4, x + width - 5, y + height - 5);
        do Screen.setColor(true);
        do Screen.drawCircle(x + 16, y + 16, 8);
        return;
    }

    //styleType = 4
    method void drawType4(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width - 1, y + height - 1);
        do Screen.setColor(false);
        do Screen.drawRectangle(x + 4, y + 4, x + width - 5, y + height - 5);
        do Screen.setColor(true);
        do Screen.drawLine(x + 4, y + 4, x + width - 5, y + height - 5);
        do Screen.drawLine(x + 4, y + height - 5, x + width - 5, y + 4);
        return;
    }

    //styleType = 5
    method void drawType5(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width - 1, y + height - 1);
        do Screen.setColor(false);
        do Screen.drawRectangle(x + 2, y + 2, x + width - 3, y + height - 3);
        do Screen.setColor(true);
        do Screen.drawRectangle(x + 8, y + 20, x + width - 8, y + 22);
        do Screen.drawCircle(x + 10, y + 12, 3);
        do Screen.drawCircle(x + width - 10, y + 12, 3);
        return;
    }

    //styleType = 6
    method void drawType6(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width - 1, y + height - 1);
        do Screen.setColor(false);
        do Screen.drawRectangle(x + 2, y + 2, x + width - 3, y + height - 3);
        do Screen.setColor(true);
        do Screen.drawRectangle(x + 8, y + 20, x + width - 8, y + 22);
        do Screen.drawCircle(x + 10, y + 12, 3);
        do Screen.drawCircle(x + width - 10, y + 12, 3);
        do Screen.drawRectangle(x + 7, y + 4, x + 12, y + 6);
        do Screen.drawRectangle(x + width - 13, y + 4, x + width - 7, y + 6);
        return;
    }

    //styleType = 7
    method void drawType7(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width - 1, y + height - 1);
        do Screen.setColor(false);
        do Screen.drawRectangle(x + 2, y + 2, x + width - 3, y + height - 3);
        do Screen.setColor(true);
        do Screen.drawCircle(x + 10, y + 12, 3);
        do Screen.drawCircle(x + width - 10, y + 12, 3);
        do Screen.drawRectangle(x + 7, y + 4, x + 12, y + 6);
        do Screen.drawRectangle(x + width - 13, y + 4, x + width - 7, y + 6);
        do Screen.drawRectangle(x + 8, y + 20, x + width - 8, y + 24);
        do Screen.setColor(false);
        do Screen.drawRectangle(x + 10, y + 21, x + width - 10, y + 23);
        return;
    }

    //styleType = 1
    method void drawBonusType1(){
        do Screen.setColor(true);
        do Screen.drawCircle(x + 16, y + 16, 8);
        do Screen.setColor(false);
        do Screen.drawCircle(x + 16, y + 16, 4);
        return;
    }

    //styleType = 2
    method void drawBonusType2(){
        do Screen.setColor(true);
        do Screen.drawRectangle(x + 4, y + 7, x + width - 5, y + 8);

        do Screen.drawLine(x + width - 5, y + 8, x + 6, y + height - 10);
        do Screen.drawLine(x + width - 4, y + 8, x + 7, y + height - 10);

        do Screen.drawLine(x + 4, y + 8, x + width - 7, y + height - 10);
        do Screen.drawLine(x + 3, y + 8, x + width - 8, y + height - 10);

        do Screen.drawLine(x + 6, y + height - 10, x + 15, y);
        do Screen.drawLine(x + 5, y + height - 10, x + 14, y);

        do Screen.drawLine(x + width - 7, y + height - 10, x + 15, y);
        do Screen.drawLine(x + width - 6, y + height - 10, x + 16, y);
        return;
    }
    
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}